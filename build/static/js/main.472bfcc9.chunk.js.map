{"version":3,"sources":["Components/CopyRights/index.js","Components/Signin/Form.js","services/api.js","services/user.service.js","providers/user.js","Components/Signin/index.js","Components/Navbar/index.js","services/pacientes.service.js","Components/Pacientes/index.js","services/medicos.service.js","Components/Medicos/index.js","services/convenios.service.js","Components/Convenios/index.js","services/hospitais.service.js","Components/Hospitais/index.js","services/cirurgias.service.js","Components/Cirurgias/index.js","services/fornecedores.service.js","Components/Fornecedores/index.js","App.js","index.js"],"names":["CopyRights","className","validations","yup","shape","name","min","required","password","Form","handleSubmit","initialValues","onSubmit","validationSchema","component","type","api","axios","create","baseURL","process","console","log","data","post","auth","token","UserContext","createContext","UserProvider","props","useState","user","setUser","useEffect","userStorage","sessionStorage","getItem","JSON","parse","Provider","value","children","useContext","openSnackbar","setOpenSnackbar","redirectHome","setredirectHome","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","autoHideDuration","message","values","userServices","signin","then","response","status","setItem","stringify","alert","catch","e","to","Navbar","handleLogout","removeItem","menuItem","toLowerCase","href","onClick","get","id","put","delete","Pacientes","pacientes","setPacientes","pacienteDetail","setPacienteDetail","openPopup","setOpenPopup","saveSceneSucessfull","setSaveSceneSucessfull","saveSceneFailure","setSaveSceneFailure","loadingSceneInfo","setLoadingSceneInfo","updateTable","setUpdateTable","popupDelete","setPopupDelete","deleteSucessfull","setDeleteSucessfull","deleteFailure","setDeleteFailure","popupView","setPopupView","readOnly","setReadOnly","popupEdit","setPopupEdit","editSucessfull","setEditSucessfull","editFailure","setEditFailure","pacienteId","setPacienteId","pacienteName","setPacienteName","a","pacientesServices","findAll","detail","loadDetail","element","newValue","item","document","getElementById","date","Date","toISOString","substr","handleView","findOne","openPopupEdit","handleSavePaciente","body","getBody","handleEditPaciente","edit","handleDeletePaciente","closePopup","nome","getValue","CPF","dataNasc","endereco","cidade","UF","CEP","telefone","celular","email","noCarteirinha","dataInclusao","validade","login","senha","length","form","class","for","placeholder","PostAdd","scope","map","Pageview","Edit","DeleteForever","Dialog","fullWidth","DialogTitle","DialogContent","DialogContentText","CheckOutlined","WarningOutlined","DialogActions","CircularProgress","color","Button","Medicos","loading","setLoading","medicos","setMedicos","medicoDetail","setMedicoDetail","medicoId","setMedicoId","medicoName","setMedicoName","popupNew","setPopupNew","loadingNew","setLoadingNew","newSucessfull","setNewSucessfull","newFailure","setNewFailure","setLoadingView","setViewSucessfull","viewFailure","setViewFailure","loadingEdit","setLoadingEdit","loadingDelete","setLoadingDelete","medicosServices","handleSaveNew","handleEdit","handleEditSave","update","handleDeleteMedico","especialidade","CRO_CRM","secretaria","Convenios","convenios","setConvenios","ConvenioDetail","setConvenioDetail","convenioId","setConvenioId","convenioName","setConvenioName","conveniosServices","editConvenio","deleteConvenio","plano","acomodacao","Hospitais","hospitais","setHospitais","hospitalDetail","setHospitalDetail","hospitalId","setHospitalId","hospitalName","setHospitalName","hospitaisServices","handleSave","editHospital","deleteHospital","CNPJ","unidade","contato1","contato2","contato3","contato4","telefone1","telefone2","telefone3","telefone4","email1","email2","email3","email4","Cirurgias","cirurgias","setCirurgias","cirurgiaDetail","setCirurgiaDetail","cirurgiaId","setCirurgiaId","cirurgiaName","setCirurgiaName","cirurgiasServices","createCirurgia","editCirurgia","deleteCirurgia","rows","cols","CID","TUSS","justificativa","materiais","Fornecedores","fornecedores","setFornecedores","fornecedorDetail","setFornecedorDetail","fornecedorId","setFornecedorId","fornecedorName","setFornecedorName","fornecedoresServices","createFornecedor","editFornecedor","deleteFornecedor","representante","App","path","Signin","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.472bfcc9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction CopyRights() {\n  return (\n    <>\n      <p className=\"copyRights\">\n        All rights reserved to @Company - 2021 - V1.0\n      </p>\n    </>\n  );\n}\n\nexport default CopyRights;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as yup from \"yup\";\nimport { ErrorMessage, Formik, Form as FormikForm, Field } from \"formik\";\n\nconst validations = yup.object().shape({\n  name: yup\n    .string()\n    .min(5, \"O usuário deve ter ao menos 5 caractéres\")\n    .required(\"O usuário deve ser informado\"),\n  password: yup\n    .string()\n    .min(6, \"A senha deve ter ao menos 6 caractéres\")\n    .required(\"A senha deve ser informada\"),\n});\n\nfunction Form({ handleSubmit, initialValues }) {\n  return (\n    <>\n      <div>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={validations}\n        >\n          <FormikForm className=\"FormSignin\">\n            <div>\n              <p className=\"FormSigninTitle\">Login</p>\n            </div>\n            <div className=\"DivForm\">\n              <div className=\"Form-Group\">\n                <label className=\"lbSignin\">E-mail do Usuário: </label>\n                <Field className=\"Form-Field\" name=\"name\" />\n                <ErrorMessage\n                  className=\"Form-Error\"\n                  component=\"span\"\n                  name=\"name\"\n                />\n              </div>\n              <div className=\"Form-Group\">\n                <label className=\"lbSignin\">Senha do Usuário: </label>\n                <Field className=\"Form-Field\" name=\"password\" type=\"password\" />\n                <ErrorMessage\n                  className=\"Form-Error\"\n                  component=\"span\"\n                  name=\"password\"\n                />\n              </div>\n              <br />\n              <button className=\"btLogin\" type=\"submit\">\n                Login\n              </button>\n            </div>\n          </FormikForm>\n        </Formik>\n      </div>\n    </>\n  );\n}\n\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object.isRequired,\n};\n\nexport default Form;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  // baseURL: \"https://nodejs-medical-api.herokuapp.com/api/v1\",\n});\n\nconsole.log(process.env.REACT_APP_API_URL);\n\nexport default api;\n","import api from \"./api\";\n\nclass DataService {\n  signin(data) {\n    return api.post(\"user/signin\", data);\n  }\n}\n\nexport default new DataService();\n","import React, { createContext, useEffect, useState } from \"react\";\n\nconst initialValues = {\n  auth: false,\n  name: \"\",\n  token: \"\",\n};\nexport const UserContext = createContext({});\n\nexport const UserProvider = (props) => {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const userStorage = sessionStorage.getItem(\"user\");\n\n    userStorage ? setUser(JSON.parse(userStorage)) : setUser(initialValues);\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"./Form\";\nimport { Snackbar } from \"@material-ui/core\";\n\nimport userServices from \"../../services/user.service\";\nimport { UserContext } from \"../../providers/user\";\n\nconst initialValues = {\n  name: \"\",\n  password: \"\",\n};\n\nexport default () => {\n  const { user, setUser } = useContext(UserContext);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [redirectHome, setredirectHome] = useState(false);\n\n  const handleSubmit = (values) => {\n    userServices\n      .signin(values)\n      .then((response) => {\n        if (response.status == 202) {\n          setUser({\n            auth: response.data.auth,\n            name: response.data.name,\n            token: response.data.token,\n          });\n          sessionStorage.setItem(\"user\", JSON.stringify(response.data));\n          setOpenSnackbar(true);\n        } else {\n          alert(\n            \"Não foi possível realizar o login, verifique os dados e tente novamente\"\n          );\n        }\n      })\n      .catch((e) => (e.response.data ? alert(e.response.data) : alert(e)));\n  };\n\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n    setredirectHome(true);\n  };\n\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        onClose={handleCloseSnackbar}\n        autoHideDuration={3000}\n        message=\"Login realizado com sucesso! Você será redirecionado para a home\"\n      />\n      <Form handleSubmit={handleSubmit} initialValues={initialValues} />\n\n      {redirectHome && <Redirect to=\"/home\" />}\n    </>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../../providers/user\";\n\nfunction Navbar() {\n  const { user, setUser } = useContext(UserContext);\n\n  const UserMenu = () => {\n    return (\n      <div className=\"userMenu\">\n        <li className=\"nav-item\">\n          <p className=\"nav-link\">\n            Olá, {user.name} (<a onClick={handleLogout}>sair</a>)\n          </p>\n        </li>\n      </div>\n    );\n  };\n\n  const handleLogout = () => {\n    setUser({\n      auth: false,\n      name: \"\",\n      token: \"\",\n    });\n    sessionStorage.removeItem(\"user\");\n  };\n\n  const menuItem = (value) => {\n    return user.auth ? (\n      <Link to={`/${value.toLowerCase()}`} className=\"nav-link\">\n        {value}\n      </Link>\n    ) : (\n      <Link to={\"/user/signin\"} className=\"nav-link\">\n        {value}\n      </Link>\n    );\n  };\n\n  return (\n    <div className=\"NavBar\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/home\" className=\"navbar-brand\">\n          Medical App\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">{menuItem(\"Pacientes\")}</li>\n          <li className=\"nav-item\">{menuItem(\"Médicos\")}</li>\n          <li className=\"nav-item\">{menuItem(\"Hospitais\")}</li>\n          <li className=\"nav-item\">{menuItem(\"Convênios\")}</li>\n          <li className=\"nav-item\">{menuItem(\"Cirurgias\")}</li>\n          <li className=\"nav-item\">{menuItem(\"Fornecedores\")}</li>\n          {user.auth ? (\n            UserMenu()\n          ) : (\n            <li className=\"nav-item\">\n              <Link to={\"/user/signin\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n          )}\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import api from \"./api\";\n\nclass DataService {\n  findAll() {\n    return api.get(\"/pacientes\");\n  }\n\n  findOne(id) {\n    return api.get(`/pacientes/${id}`);\n  }\n\n  create(data) {\n    return api.post(\"/pacientes\", data);\n  }\n\n  edit(id, data) {\n    return api.put(`/pacientes/${id}`, data);\n  }\n\n  delete(data) {\n    return api.delete(`/pacientes/${data}`);\n  }\n}\n\nexport default new DataService();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Pageview as PageviewIcon,\n  Edit as EditIcon,\n  DeleteForever as DeleteForeverIcon,\n  WarningOutlined as WarningOutlinedIcon,\n  CheckOutlined as CheckOutlinedIcon,\n  PostAdd as PostAddIcon,\n} from \"@material-ui/icons\";\nimport {\n  CircularProgress,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport pacientesServices from \"../../services/pacientes.service\";\n\nfunction Pacientes() {\n  const [pacientes, setPacientes] = useState([]);\n  const [pacienteDetail, setPacienteDetail] = useState({});\n  const [openPopup, setOpenPopup] = useState(false);\n  const [saveSceneSucessfull, setSaveSceneSucessfull] = useState(false);\n  const [saveSceneFailure, setSaveSceneFailure] = useState(false);\n  const [loadingSceneInfo, setLoadingSceneInfo] = useState(false);\n  const [updateTable, setUpdateTable] = useState(false);\n  const [popupDelete, setPopupDelete] = useState(false);\n  const [deleteSucessfull, setDeleteSucessfull] = useState(false);\n  const [deleteFailure, setDeleteFailure] = useState(false);\n  const [popupView, setPopupView] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [popupEdit, setPopupEdit] = useState(false);\n  const [editSucessfull, setEditSucessfull] = useState(false);\n  const [editFailure, setEditFailure] = useState(false);\n  const [pacienteId, setPacienteId] = useState(0);\n  const [pacienteName, setPacienteName] = useState(\"\");\n\n  useEffect(async () => {\n    const response = await pacientesServices.findAll();\n    response.status == 200\n      ? setPacientes(response.data)\n      : alert(\n          \"Não foi possível carregar os dados, tente novamente mais tarde!\"\n        );\n\n    setUpdateTable(false);\n  }, [updateTable]);\n\n  useEffect(() => {\n    if (pacienteDetail) {\n      for (const detail in pacienteDetail) {\n        loadDetail(detail, pacienteDetail[detail]);\n      }\n    }\n  }, [pacienteDetail]);\n\n  const loadDetail = (element, newValue) => {\n    const item = document.getElementById(element);\n    if (item) {\n      if (item.type === \"text\") {\n        item.value = newValue;\n      } else {\n        const date = new Date(newValue);\n        item.value = date.toISOString().substr(0, 10);\n      }\n    }\n  };\n\n  const handleView = async (id) => {\n    setPopupView(true);\n    setReadOnly(true);\n\n    try {\n      const response = await pacientesServices.findOne(id);\n\n      response.status == 200 && setPacienteDetail(response.data);\n    } catch (e) {\n      e.response.data ? alert(e.response.data) : alert(e);\n    }\n  };\n\n  const openPopupEdit = async (id) => {\n    setPopupEdit(true);\n    setReadOnly(false);\n    setPacienteId(id);\n\n    try {\n      const response = await pacientesServices.findOne(id);\n\n      response.status == 200 && setPacienteDetail(response.data);\n    } catch (e) {\n      e.response.data ? alert(e.response.data) : alert(e);\n    }\n  };\n\n  const deletePopup = (id, name) => {\n    setPacienteId(id);\n    setPacienteName(name);\n    setPopupDelete(true);\n  };\n\n  const handleSavePaciente = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingSceneInfo(true);\n\n      const response = await pacientesServices.create(body);\n\n      switch (response.status) {\n        case 201:\n          setSaveSceneSucessfull(true);\n          break;\n\n        default:\n          setSaveSceneFailure(true);\n      }\n    } catch (e) {\n      setSaveSceneFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingSceneInfo(false);\n    }\n  };\n\n  const handleEditPaciente = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingSceneInfo(true);\n\n      const response = await pacientesServices.edit(pacienteId, body);\n\n      switch (response.status) {\n        case 202:\n          setEditSucessfull(true);\n          break;\n\n        default:\n          setEditFailure(true);\n      }\n    } catch (e) {\n      setEditSucessfull(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingSceneInfo(false);\n    }\n  };\n\n  const handleDeletePaciente = async () => {\n    try {\n      setLoadingSceneInfo(true);\n\n      const response = await pacientesServices.delete(pacienteId);\n\n      switch (response.status) {\n        case 202:\n          setDeleteSucessfull(true);\n          break;\n\n        default:\n          setDeleteFailure(true);\n      }\n    } catch (e) {\n      setDeleteFailure(true);\n    } finally {\n      setLoadingSceneInfo(false);\n    }\n  };\n\n  const closePopup = () => {\n    setUpdateTable(true);\n    setOpenPopup(false);\n    setSaveSceneSucessfull(false);\n    setSaveSceneFailure(false);\n    setLoadingSceneInfo(false);\n    setPopupDelete(false);\n    setDeleteSucessfull(false);\n    setDeleteFailure(false);\n    setPopupView(false);\n    setReadOnly(false);\n    setPacienteDetail({});\n    setPopupEdit(false);\n    setEditSucessfull(false);\n    setEditFailure(false);\n  };\n\n  const getBody = () => {\n    return {\n      nome: getValue(\"nome\"),\n      CPF: getValue(\"CPF\"),\n      dataNasc: getValue(\"dataNasc\"),\n      endereco: getValue(\"endereco\"),\n      cidade: getValue(\"cidade\"),\n      UF: getValue(\"UF\"),\n      CEP: getValue(\"CEP\"),\n      telefone: getValue(\"telefone\"),\n      celular: getValue(\"celular\"),\n      email: getValue(\"email\"),\n      noCarteirinha: getValue(\"noCarteirinha\"),\n      dataInclusao: getValue(\"dataInclusao\"),\n      validade: getValue(\"validade\"),\n      login: getValue(\"login\"),\n      senha: getValue(\"senha\"),\n    };\n  };\n\n  const getValue = (id) => {\n    const { value } = document.getElementById(id);\n    return value.length > 0 ? value : null;\n  };\n\n  const form = () => {\n    return (\n      <form id=\"Form-Add-Paciente\">\n        <div class=\"form-group\">\n          <label for=\"nome\">Nome do Paciente</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"nome\"\n            placeholder=\"Nome do paciente\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"CPF\">CPF</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CPF\"\n              placeholder=\"CPF\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"dataNasc\">Data de Nascimento</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              id=\"dataNasc\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"endereco\">Endereço</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"endereco\"\n            placeholder=\"Endereço\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"cidade\">Cidade</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cidade\"\n              placeholder=\"Cidade\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"UF\">UF</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"UF\"\n              placeholder=\"Estado\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"CEP\">CEP</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CEP\"\n              placeholder=\"CEP\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"telefone\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"celular\">Celular</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"celular\"\n              placeholder=\"Celular\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">E-mail</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"email\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"noCarteirinha\">No Carteirinha</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"noCarteirinha\"\n            placeholder=\"Número da carteirinha do paciente\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"dataInclusao\">Data Inclusão</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              id=\"dataInclusao\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"validade\">Validade</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              id=\"validade\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"login\">Login</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"login\"\n              placeholder=\"Login\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"senha\">Senha</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"senha\"\n              placeholder=\"Senha\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"Paciente-Title\">\n        <h1>Pacientes</h1>\n        <p>\n          Novo Paciente{\" \"}\n          <PostAddIcon\n            className=\"Add-Button\"\n            onClick={() => setOpenPopup(true)}\n          />\n        </p>\n      </div>\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome do Paciente</th>\n            <th scope=\"col\">CPF</th>\n            <th scope=\"col\">Data Nasc.</th>\n            <th scope=\"col\">E-mail</th>\n            <th scope=\"col\">Telefone</th>\n            <th scope=\"col\">Celular</th>\n            <th scope=\"col\">Função</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pacientes.map((item) => (\n            <tr scope=\"row\">\n              <td>{item.id}</td>\n              <td>{item.nome}</td>\n              <td>{item.CPF}</td>\n              <td>{item.dataNasc}</td>\n              <td>{item.email}</td>\n              <td>{item.telefone}</td>\n              <td>{item.celular}</td>\n              <td className=\"td-funcoes\">\n                <PageviewIcon onClick={() => handleView(item.id)} />\n                <EditIcon onClick={() => openPopupEdit(item.id)} />\n                <DeleteForeverIcon\n                  onClick={() => deletePopup(item.id, item.nome)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        <Dialog open={openPopup} fullWidth={true}>\n          <DialogTitle>Cadastrar Novo Paciente</DialogTitle>\n          <DialogContent>\n            {saveSceneSucessfull && (\n              <DialogContentText>\n                <CheckOutlinedIcon /> Paciente cadastrado com sucesso!!!\n              </DialogContentText>\n            )}\n            {saveSceneFailure && (\n              <DialogContentText>\n                <WarningOutlinedIcon /> Falha ao tentar cadastrar paciente,\n                verifique os dados e tente novamente!!!\n              </DialogContentText>\n            )}\n            {form()}\n          </DialogContent>\n          <DialogActions>\n            {loadingSceneInfo && <CircularProgress color=\"secondary\" />}\n            <Button onClick={() => closePopup()}>Cancelar</Button>\n            {saveSceneSucessfull ? (\n              <Button onClick={() => closePopup()}>Sair</Button>\n            ) : (\n              <Button onClick={() => handleSavePaciente()}>Salvar</Button>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n      <div>\n        <Dialog open={popupDelete} fullWidth={true}>\n          <DialogTitle>Deletar Paciente</DialogTitle>\n          <DialogContent>\n            {deleteSucessfull && (\n              <DialogContentText>\n                <CheckOutlinedIcon /> Paciente deletado com sucesso!!!\n              </DialogContentText>\n            )}\n            {deleteFailure && (\n              <DialogContentText>\n                <WarningOutlinedIcon /> Falha ao tentar deletar paciente, tente\n                novamente!!!\n              </DialogContentText>\n            )}\n            Você realmente desejar deletar o paciente {pacienteName} (\n            {pacienteId})?\n          </DialogContent>\n          <DialogActions>\n            {loadingSceneInfo && <CircularProgress color=\"secondary\" />}\n            {deleteSucessfull && (\n              <Button onClick={() => closePopup()}>Sair</Button>\n            )}\n            {!deleteSucessfull && (\n              <Button onClick={() => handleDeletePaciente()}>Sim</Button>\n            )}\n            {!deleteSucessfull && (\n              <Button onClick={() => closePopup()}>Não</Button>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n      <div>\n        <Dialog open={popupView} fullWidth={true}>\n          <DialogTitle>Dados do Paciente</DialogTitle>\n          <DialogContent>{form()}</DialogContent>\n          <DialogActions>\n            <Button onClick={() => closePopup()}>Sair</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      <div>\n        <Dialog open={popupEdit} fullWidth={true}>\n          <DialogTitle>Editar Dados do Paciente</DialogTitle>\n          <DialogContent>\n            {editSucessfull && (\n              <DialogContentText>\n                <CheckOutlinedIcon /> Paciente atualizado com sucesso!!!\n              </DialogContentText>\n            )}\n            {editFailure && (\n              <DialogContentText>\n                <WarningOutlinedIcon /> Falha ao tentar atualizar paciente,\n                verifique os dados e tente novamente!!!\n              </DialogContentText>\n            )}\n            {form()}\n          </DialogContent>\n          <DialogActions>\n            {loadingSceneInfo && <CircularProgress color=\"secondary\" />}\n            <Button onClick={() => closePopup()}>Cancelar</Button>\n            {editSucessfull ? (\n              <Button onClick={() => closePopup()}>Sair</Button>\n            ) : (\n              <Button onClick={() => handleEditPaciente()}>Salvar</Button>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\n\nexport default Pacientes;\n","import api from \"./api\";\n\nclass DataService {\n  findAll() {\n    return api.get(\"/medicos\");\n  }\n\n  findOne(id) {\n    return api.get(`/medicos/${id}`);\n  }\n\n  create(data) {\n    return api.post(\"/medicos\", data);\n  }\n\n  update(id, data) {\n    return api.put(`/medicos/${id}`, data);\n  }\n\n  delete(id) {\n    return api.delete(`/medicos/${id}`);\n  }\n}\n\nexport default new DataService();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Pageview as PageviewIcon,\n  Edit as EditIcon,\n  DeleteForever as DeleteForeverIcon,\n  WarningOutlined as WarningOutlinedIcon,\n  CheckOutlined as CheckOutlinedIcon,\n  PostAdd as PostAddIcon,\n} from \"@material-ui/icons\";\nimport {\n  CircularProgress,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport medicosServices from \"../../services/medicos.service\";\n\nfunction Medicos() {\n  const [updateTable, setUpdateTable] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [medicos, setMedicos] = useState([]);\n  const [medicoDetail, setMedicoDetail] = useState({});\n  const [medicoId, setMedicoId] = useState(0);\n  const [medicoName, setMedicoName] = useState(\"\");\n  const [popupNew, setPopupNew] = useState(false);\n  const [loadingNew, setLoadingNew] = useState(false);\n  const [newSucessfull, setNewSucessfull] = useState(false);\n  const [newFailure, setNewFailure] = useState(false);\n  const [popupView, setPopupView] = useState(false);\n  const [loadingView, setLoadingView] = useState(false);\n  const [viewSucessfull, setViewSucessfull] = useState(false);\n  const [viewFailure, setViewFailure] = useState(false);\n  const [popupEdit, setPopupEdit] = useState(false);\n  const [loadingEdit, setLoadingEdit] = useState(false);\n  const [editSucessfull, setEditSucessfull] = useState(false);\n  const [editFailure, setEditFailure] = useState(false);\n  const [popupDelete, setPopupDelete] = useState(false);\n  const [loadingDelete, setLoadingDelete] = useState(false);\n  const [deleteSucessfull, setDeleteSucessfull] = useState(false);\n  const [deleteFailure, setDeleteFailure] = useState(false);\n\n  useEffect(async () => {\n    const response = await medicosServices.findAll();\n\n    response.status == 200\n      ? setMedicos(response.data)\n      : alert(\n          \"Não foi possível carregar os dados, tente novamente mais tarde!\"\n        );\n\n    setUpdateTable(false);\n    setLoading(false);\n  }, [updateTable]);\n\n  useEffect(async () => {\n    if (medicoDetail) {\n      for (const detail in medicoDetail) {\n        loadDetail(detail, medicoDetail[detail]);\n      }\n    }\n  }, [medicoDetail]);\n\n  const handleSaveNew = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingNew(true);\n\n      const response = await medicosServices.create(body);\n\n      switch (response.status) {\n        case 201:\n          setNewSucessfull(true);\n          break;\n\n        default:\n          setNewFailure(true);\n      }\n    } catch (e) {\n      setNewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingNew(false);\n      setUpdateTable(true);\n    }\n  };\n\n  const handleView = async (id) => {\n    setPopupView(true);\n    setReadOnly(true);\n\n    try {\n      setLoadingView(true);\n\n      const response = await medicosServices.findOne(id);\n\n      response.status == 200\n        ? setMedicoDetail(response.data)\n        : alert(\n            \"Falha ao buscar as informações do médicos, tente novamente mais tarde!\"\n          );\n    } catch (e) {\n      setViewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingView(false);\n    }\n  };\n\n  const handleEdit = async (id) => {\n    setPopupEdit(true);\n    setMedicoId(id);\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await medicosServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setMedicoDetail(response.data);\n          break;\n\n        default:\n          setEditFailure(true);\n          alert(\n            \"Falha ao buscar as informações do médicos, tente novamente mais tarde!\"\n          );\n          break;\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingEdit(false);\n    }\n  };\n\n  const handleEditSave = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await medicosServices.update(medicoId, body);\n\n      switch (response.status) {\n        case 202:\n          setEditSucessfull(true);\n          break;\n\n        default:\n          setEditFailure(true);\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setUpdateTable(true);\n      setLoadingEdit(false);\n    }\n  };\n\n  const handleDelete = (id, name) => {\n    setMedicoId(id);\n    setMedicoName(name);\n    setPopupDelete(true);\n  };\n\n  const handleDeleteMedico = async () => {\n    try {\n      setLoadingDelete(true);\n\n      const response = await medicosServices.delete(medicoId);\n\n      switch (response.status) {\n        case 202:\n          setDeleteSucessfull(true);\n          break;\n\n        default:\n          setDeleteFailure(true);\n      }\n    } catch (e) {\n      e.response.data ? alert(e.response.data) : alert(e);\n      setDeleteFailure(true);\n    } finally {\n      setUpdateTable(true);\n      setLoadingDelete(false);\n    }\n  };\n\n  const getBody = () => {\n    return {\n      nome: getValue(\"nome\"),\n      especialidade: getValue(\"especialidade\"),\n      CRO_CRM: getValue(\"CRO_CRM\"),\n      endereco: getValue(\"endereco\"),\n      cidade: getValue(\"cidade\"),\n      UF: getValue(\"UF\"),\n      CEP: getValue(\"CEP\"),\n      telefone: getValue(\"telefone\"),\n      celular: getValue(\"celular\"),\n      email: getValue(\"email\"),\n      secretaria: getValue(\"secretaria\"),\n    };\n  };\n\n  const getValue = (id) => {\n    const { value } = document.getElementById(id);\n    return value.length > 0 ? value : null;\n  };\n\n  const loadDetail = (element, newValue) => {\n    const item = document.getElementById(element);\n\n    if (item) {\n      if (item.type === \"text\") {\n        item.value = newValue;\n      } else {\n        const date = new Date(newValue);\n        item.value = date.toISOString().substr(0, 10);\n      }\n    }\n  };\n\n  const closePopup = () => {\n    setReadOnly(false);\n\n    setPopupNew(false);\n    setLoadingNew(false);\n    setNewSucessfull(false);\n    setNewFailure(false);\n\n    setPopupView(false);\n    setLoadingView(false);\n    setViewSucessfull(false);\n    setViewFailure(false);\n\n    setPopupEdit(false);\n    setLoadingEdit(false);\n    setEditSucessfull(false);\n    setEditFailure(false);\n\n    setPopupDelete(false);\n    setLoadingDelete(false);\n    setDeleteSucessfull(false);\n    setDeleteFailure(false);\n  };\n\n  const form = () => {\n    return (\n      <form id=\"Form-Add-Paciente\">\n        <div class=\"form-group\">\n          <label for=\"nome\">Nome do Médico</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"nome\"\n            placeholder=\"Nome do paciente\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"especialidade\">Especialidade</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"especialidade\"\n              placeholder=\"Especialidade\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"CRO_CRM\">CRO/CRM</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CRO_CRM\"\n              placeholder=\"CRO/CRM\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"endereco\">Endereço</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"endereco\"\n            placeholder=\"Endereço\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"cidade\">Cidade</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cidade\"\n              placeholder=\"Cidade\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"UF\">UF</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"UF\"\n              placeholder=\"Estado\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"CEP\">CEP</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CEP\"\n              placeholder=\"CEP\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"telefone\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"celular\">Celular</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"celular\"\n              placeholder=\"Celular\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">E-mail</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"email\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"secretaria\">Contato Secretária</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"secretaria\"\n            placeholder=\"Contato Secretária\"\n            readOnly={readOnly}\n          />\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"Medicos-Title\">\n        <h1>Médicos</h1>\n        {loading && <CircularProgress color=\"secondary\" />}\n        <p>\n          Novo Médico{\" \"}\n          <PostAddIcon\n            className=\"Add-Button\"\n            onClick={() => setPopupNew(true)}\n          />\n        </p>\n      </div>\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome</th>\n            <th scope=\"col\">Especialidade</th>\n            <th scope=\"col\">CRO/CRM</th>\n            <th scope=\"col\">E-mail</th>\n            <th scope=\"col\">Telefone</th>\n            <th scope=\"col\">Celular</th>\n            <th scope=\"col\">Função</th>\n          </tr>\n        </thead>\n        <tbody>\n          {medicos.map((item) => (\n            <tr scope=\"row\">\n              <td>{item.id}</td>\n              <td>{item.nome}</td>\n              <td>{item.especialidade}</td>\n              <td>{item.CRO_CRM}</td>\n              <td>{item.email}</td>\n              <td>{item.telefone}</td>\n              <td>{item.celular}</td>\n              <td className=\"td-funcoes\">\n                <PageviewIcon onClick={() => handleView(item.id)} />\n                <EditIcon onClick={() => handleEdit(item.id)} />\n                <DeleteForeverIcon\n                  onClick={() => handleDelete(item.id, item.nome)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Dialog open={popupNew} fullWidth={true}>\n        <DialogTitle>Cadastrar Novo Médico</DialogTitle>\n        <DialogContent>\n          {newSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Médico cadastrado com sucesso!!!\n            </DialogContentText>\n          )}\n          {newFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar cadastrar médico,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingNew && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {newSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => handleSaveNew()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupView} fullWidth={true}>\n        <DialogTitle>Dados do Médico</DialogTitle>\n        <DialogContent>\n          {viewFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao carregar os dados do médico\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => closePopup()}>Sair</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupEdit} fullWidth={true}>\n        <DialogTitle>Editar Dados do Médico</DialogTitle>\n        <DialogContent>\n          {editSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Médico editado com sucesso!!!\n            </DialogContentText>\n          )}\n          {editFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar editar médico, verifique\n              os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingEdit && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {editSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => handleEditSave()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupDelete} fullWidth={true}>\n        <DialogTitle>Deletar Médico</DialogTitle>\n        <DialogContent>\n          {deleteSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Médico deletado com sucesso!!!\n            </DialogContentText>\n          )}\n          {deleteFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar deletar médico, verifique\n              os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          Você realmente deseja deletar o médico {medicoName} ({medicoId})?\n        </DialogContent>\n        <DialogActions>\n          {loadingDelete && <CircularProgress color=\"secondary\" />}\n          {deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => handleDeleteMedico()}>Sim</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Não</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Medicos;\n","import api from \"./api\";\n\nclass DataService {\n  findAll() {\n    return api.get(\"/convenios\");\n  }\n\n  findOne(id) {\n    return api.get(`/convenios/${id}`);\n  }\n\n  create(data) {\n    return api.post(\"/convenios\", data);\n  }\n\n  update(id, data) {\n    return api.put(`/convenios/${id}`, data);\n  }\n\n  delete(id) {\n    return api.delete(`/convenios/${id}`);\n  }\n}\n\nexport default new DataService();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Pageview as PageviewIcon,\n  Edit as EditIcon,\n  DeleteForever as DeleteForeverIcon,\n  WarningOutlined as WarningOutlinedIcon,\n  CheckOutlined as CheckOutlinedIcon,\n  PostAdd as PostAddIcon,\n} from \"@material-ui/icons\";\nimport {\n  CircularProgress,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport conveniosServices from \"../../services/convenios.service\";\n\nfunction Convenios() {\n  const [updateTable, setUpdateTable] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [convenios, setConvenios] = useState([]);\n  const [ConvenioDetail, setConvenioDetail] = useState({});\n  const [convenioId, setConvenioId] = useState(0);\n  const [convenioName, setConvenioName] = useState(\"\");\n  const [popupNew, setPopupNew] = useState(false);\n  const [loadingNew, setLoadingNew] = useState(false);\n  const [newSucessfull, setNewSucessfull] = useState(false);\n  const [newFailure, setNewFailure] = useState(false);\n  const [popupView, setPopupView] = useState(false);\n  const [loadingView, setLoadingView] = useState(false);\n  const [viewSucessfull, setViewSucessfull] = useState(false);\n  const [viewFailure, setViewFailure] = useState(false);\n  const [popupEdit, setPopupEdit] = useState(false);\n  const [loadingEdit, setLoadingEdit] = useState(false);\n  const [editSucessfull, setEditSucessfull] = useState(false);\n  const [editFailure, setEditFailure] = useState(false);\n  const [popupDelete, setPopupDelete] = useState(false);\n  const [loadingDelete, setLoadingDelete] = useState(false);\n  const [deleteSucessfull, setDeleteSucessfull] = useState(false);\n  const [deleteFailure, setDeleteFailure] = useState(false);\n\n  useEffect(async () => {\n    setLoading(true);\n\n    const response = await conveniosServices.findAll();\n\n    switch (response.status) {\n      case 200:\n        setConvenios(response.data);\n        break;\n\n      default:\n        alert(\n          \"Não foi possível carregar os dados, tente novamente mais tarde!\"\n        );\n    }\n\n    setLoading(false);\n    setUpdateTable(false);\n  }, [updateTable]);\n\n  useEffect(() => {\n    if (ConvenioDetail) {\n      for (const detail in ConvenioDetail) {\n        loadDetail(detail, ConvenioDetail[detail]);\n      }\n    }\n  }, [ConvenioDetail]);\n\n  const handleSaveNew = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingNew(true);\n\n      const response = await conveniosServices.create(body);\n\n      switch (response.status) {\n        case 201:\n          setNewSucessfull(true);\n          setUpdateTable(true);\n          break;\n\n        default:\n          setNewFailure(true);\n      }\n    } catch (e) {\n      setNewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingNew(false);\n    }\n  };\n\n  const handleView = async (id) => {\n    setPopupView(true);\n    setReadOnly(true);\n\n    try {\n      setLoadingView(true);\n\n      const response = await conveniosServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setConvenioDetail(response.data);\n          break;\n\n        default:\n          setViewFailure(true);\n          alert(\"Falha ao buscar as informações do convênio, tente novamente\");\n      }\n    } catch (e) {\n      setViewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingView(false);\n    }\n  };\n\n  const handleEdit = async (id) => {\n    setPopupEdit(true);\n    setConvenioId(id);\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await conveniosServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setConvenioDetail(response.data);\n          break;\n\n        default:\n          setEditFailure(true);\n          alert(\n            \"Falha ao buscar as informações do convênio, tente novamente mais tarde\"\n          );\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingEdit(false);\n    }\n  };\n\n  const editConvenio = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await conveniosServices.update(convenioId, body);\n\n      switch (response.status) {\n        case 202:\n          setEditSucessfull(true);\n          break;\n\n        default:\n          setEditFailure(true);\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setUpdateTable(true);\n      setLoadingEdit(false);\n    }\n  };\n\n  const handleDelete = (id, name) => {\n    setConvenioId(id);\n    setConvenioName(name);\n    setPopupDelete(true);\n  };\n\n  const deleteConvenio = async () => {\n    try {\n      setLoadingDelete(true);\n\n      const response = await conveniosServices.delete(convenioId);\n\n      switch (response.status) {\n        case 202:\n          setDeleteSucessfull(true);\n          break;\n\n        default:\n          setDeleteFailure(true);\n      }\n    } catch (e) {\n      e.response.data ? alert(e.response.data) : alert(e);\n      setDeleteFailure(true);\n    } finally {\n      setUpdateTable(true);\n      setLoadingDelete(false);\n    }\n  };\n\n  const getBody = () => {\n    return {\n      nome: getValue(\"nome\"),\n      endereco: getValue(\"endereco\"),\n      cidade: getValue(\"cidade\"),\n      UF: getValue(\"UF\"),\n      CEP: getValue(\"CEP\"),\n      telefone: getValue(\"telefone\"),\n      celular: getValue(\"celular\"),\n      email: getValue(\"email\"),\n      plano: getValue(\"plano\"),\n      acomodacao: getValue(\"acomodacao\"),\n    };\n  };\n\n  const getValue = (id) => {\n    const { value } = document.getElementById(id);\n    return value.length > 0 ? value : null;\n  };\n\n  const loadDetail = (element, newValue) => {\n    const item = document.getElementById(element);\n\n    if (item) {\n      item.value = newValue;\n    }\n  };\n\n  const form = () => {\n    return (\n      <form id=\"Form-Add-Paciente\">\n        <div class=\"form-group\">\n          <label for=\"nome\">Nome</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"nome\"\n            placeholder=\"Nome\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"endereco\">Endereço</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"endereco\"\n            placeholder=\"Endereço\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"cidade\">Cidade</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cidade\"\n              placeholder=\"Cidade\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"UF\">UF</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"UF\"\n              placeholder=\"Estado\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"CEP\">CEP</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CEP\"\n              placeholder=\"CEP\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"telefone\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"celular\">Celular</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"celular\"\n              placeholder=\"Celular\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"email\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"plano\">Plano</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"plano\"\n            placeholder=\"Plano\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"acomodacao\">Acomodação</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"acomodacao\"\n            placeholder=\"Acomodação\"\n            readOnly={readOnly}\n          />\n        </div>\n      </form>\n    );\n  };\n\n  const closePopup = () => {\n    setPopupNew(false);\n    setLoadingNew(false);\n    setNewSucessfull(false);\n    setNewFailure(false);\n\n    setPopupView(false);\n    setLoadingView(false);\n    setViewSucessfull(false);\n    setViewFailure(false);\n    setReadOnly(false);\n\n    setPopupEdit(false);\n    setLoadingEdit(false);\n    setEditSucessfull(false);\n    setEditFailure(false);\n\n    setPopupDelete(false);\n    setLoadingDelete(false);\n    setDeleteSucessfull(false);\n    setDeleteFailure(false);\n  };\n\n  return (\n    <>\n      <div className=\"Medicos-Title\">\n        <h1>Convênios</h1>\n        {loading && <CircularProgress color=\"secondary\" />}\n        <p>\n          Novo Convênio{\" \"}\n          <PostAddIcon\n            className=\"Add-Button\"\n            onClick={() => setPopupNew(true)}\n          />\n        </p>\n      </div>\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome</th>\n            <th scope=\"col\">Plano</th>\n            <th scope=\"col\">Acomodação</th>\n            <th scope=\"col\">Endereço</th>\n            <th scope=\"col\">Cidade</th>\n            <th scope=\"col\">E-mail</th>\n            <th scope=\"col\">Telefone</th>\n            <th scope=\"col\">Celular</th>\n            <th scope=\"col\">Função</th>\n          </tr>\n        </thead>\n        <tbody>\n          {convenios.map((item) => (\n            <tr scope=\"row\">\n              <td>{item.id}</td>\n              <td>{item.nome}</td>\n              <td>{item.plano}</td>\n              <td>{item.acomodacao}</td>\n              <td>{item.endereco}</td>\n              <td>{item.cidade}</td>\n              <td>{item.email}</td>\n              <td>{item.telefone}</td>\n              <td>{item.celular}</td>\n              <td className=\"td-funcoes\">\n                <PageviewIcon onClick={() => handleView(item.id)} />\n                <EditIcon onClick={() => handleEdit(item.id)} />\n                <DeleteForeverIcon\n                  onClick={() => handleDelete(item.id, item.nome)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Dialog open={popupNew} fullWidth={true}>\n        <DialogTitle>Cadastrar Novo Convênio</DialogTitle>\n        <DialogContent>\n          {newSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Convênio cadastrado com sucesso!!!\n            </DialogContentText>\n          )}\n          {newFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar cadastrar convênio,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingNew && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {newSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => handleSaveNew()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupView} fullWidth={true}>\n        <DialogTitle>Dados do Convênio</DialogTitle>\n        <DialogContent>\n          {viewFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao carregar os dados do médico\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => closePopup()}>Sair</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupEdit} fullWidth={true}>\n        <DialogTitle>Editar Dados do Convênio</DialogTitle>\n        <DialogContent>\n          {editSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Convênio editado com sucesso!!!\n            </DialogContentText>\n          )}\n          {editFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar editar convênio, verifique\n              os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingEdit && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {editSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => editConvenio()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupDelete} fullWidth={true}>\n        <DialogTitle>Deletar Convênio</DialogTitle>\n        <DialogContent>\n          {deleteSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Convênio deletado com sucesso!!!\n            </DialogContentText>\n          )}\n          {deleteFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar deletar convênio,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          Você realmente deseja deletar o convênio {convenioName} ({convenioId}\n          )?\n        </DialogContent>\n        <DialogActions>\n          {loadingDelete && <CircularProgress color=\"secondary\" />}\n          {deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => deleteConvenio()}>Sim</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Não</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Convenios;\n","import api from \"./api\";\n\nclass DataService {\n  findAll() {\n    return api.get(\"/hospitais\");\n  }\n\n  findOne(id) {\n    return api.get(`/hospitais/${id}`);\n  }\n\n  create(data) {\n    return api.post(\"/hospitais\", data);\n  }\n\n  update(id, data) {\n    return api.put(`/hospitais/${id}`, data);\n  }\n\n  delete(id) {\n    return api.delete(`/hospitais/${id}`);\n  }\n}\n\nexport default new DataService();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Pageview as PageviewIcon,\n  Edit as EditIcon,\n  DeleteForever as DeleteForeverIcon,\n  WarningOutlined as WarningOutlinedIcon,\n  CheckOutlined as CheckOutlinedIcon,\n  PostAdd as PostAddIcon,\n} from \"@material-ui/icons\";\nimport {\n  CircularProgress,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport hospitaisServices from \"../../services/hospitais.service\";\n\nfunction Hospitais() {\n  const [updateTable, setUpdateTable] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [hospitais, setHospitais] = useState([]);\n  const [hospitalDetail, setHospitalDetail] = useState({});\n  const [hospitalId, setHospitalId] = useState(0);\n  const [hospitalName, setHospitalName] = useState(\"\");\n  const [popupNew, setPopupNew] = useState(false);\n  const [loadingNew, setLoadingNew] = useState(false);\n  const [newSucessfull, setNewSucessfull] = useState(false);\n  const [newFailure, setNewFailure] = useState(false);\n  const [popupView, setPopupView] = useState(false);\n  const [loadingView, setLoadingView] = useState(false);\n  const [viewSucessfull, setViewSucessfull] = useState(false);\n  const [viewFailure, setViewFailure] = useState(false);\n  const [popupEdit, setPopupEdit] = useState(false);\n  const [loadingEdit, setLoadingEdit] = useState(false);\n  const [editSucessfull, setEditSucessfull] = useState(false);\n  const [editFailure, setEditFailure] = useState(false);\n  const [popupDelete, setPopupDelete] = useState(false);\n  const [loadingDelete, setLoadingDelete] = useState(false);\n  const [deleteSucessfull, setDeleteSucessfull] = useState(false);\n  const [deleteFailure, setDeleteFailure] = useState(false);\n\n  useEffect(async () => {\n    setLoading(true);\n\n    const response = await hospitaisServices.findAll();\n\n    switch (response.status) {\n      case 200:\n        setHospitais(response.data);\n        break;\n\n      default:\n        alert(\n          \"Não foi possível carregar os dados, tente novamente mais tarde!\"\n        );\n    }\n\n    setLoading(false);\n    setUpdateTable(false);\n  }, [updateTable]);\n\n  useEffect(() => {\n    if (hospitalDetail) {\n      for (const detail in hospitalDetail) {\n        loadDetail(detail, hospitalDetail[detail]);\n      }\n    }\n  }, [hospitalDetail]);\n\n  const handleSave = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingNew(true);\n\n      const response = await hospitaisServices.create(body);\n\n      switch (response.status) {\n        case 201:\n          setNewSucessfull(true);\n          setUpdateTable(true);\n          break;\n\n        default:\n          setNewFailure(true);\n      }\n    } catch (e) {\n      setNewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingNew(false);\n    }\n  };\n\n  const handleView = async (id) => {\n    setPopupView(true);\n    setReadOnly(true);\n\n    try {\n      setLoadingView(true);\n\n      const response = await hospitaisServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setHospitalDetail(response.data);\n          break;\n        default:\n          setViewFailure(true);\n          alert(\n            \"Falha ao buscar as informações do hospital, tente novamente mais tarde\"\n          );\n      }\n    } catch (e) {\n      setViewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingView(false);\n    }\n  };\n\n  const handleEdit = async (id) => {\n    setPopupEdit(true);\n    setHospitalId(id);\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await hospitaisServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setHospitalDetail(response.data);\n          break;\n\n        default:\n          setEditFailure(true);\n          alert(\n            \"Falha ao buscar os informações do hospital, tente novamente mais tarde\"\n          );\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingEdit(false);\n    }\n  };\n\n  const editHospital = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await hospitaisServices.update(hospitalId, body);\n\n      switch (response.status) {\n        case 202:\n          setEditSucessfull(true);\n          break;\n\n        default:\n          setEditFailure(true);\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setUpdateTable(true);\n      setLoadingEdit(false);\n    }\n  };\n\n  const handleDelete = (id, name) => {\n    setHospitalId(id);\n    setHospitalName(name);\n    setPopupDelete(true);\n  };\n\n  const deleteHospital = async () => {\n    try {\n      setLoadingDelete(true);\n\n      const response = await hospitaisServices.delete(hospitalId);\n\n      switch (response.status) {\n        case 202:\n          setDeleteSucessfull(true);\n          break;\n\n        default:\n          setDeleteFailure(true);\n      }\n    } catch (e) {\n      e.response.data ? alert(e.response.data) : alert(e);\n      setDeleteFailure(true);\n    } finally {\n      setUpdateTable(true);\n      setLoadingDelete(false);\n    }\n  };\n\n  const form = () => {\n    return (\n      <form id=\"Form-Add-Paciente\">\n        <div class=\"form-group\">\n          <label for=\"nome\">Nome</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"nome\"\n            placeholder=\"Nome\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"unidade\">Unidade</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"unidade\"\n              placeholder=\"Unidade\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"CNPJ\">CNPJ</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CNPJ\"\n              placeholder=\"CNPJ\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"endereco\">Endereço</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"endereco\"\n            placeholder=\"Endereço\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"cidade\">Cidade</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cidade\"\n              placeholder=\"Cidade\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"UF\">UF</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"UF\"\n              placeholder=\"Estado\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"CEP\">CEP</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CEP\"\n              placeholder=\"CEP\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"contato1\">Contato (1)</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"contato1\"\n              placeholder=\"Contato\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"telefone1\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone1\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email1\">E-mail</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"email1\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"contato2\">Contato (2)</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"contato2\"\n              placeholder=\"Contato\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"telefone2\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone2\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email2\">E-mail</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"email2\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"contato3\">Contato (3)</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"contato3\"\n              placeholder=\"Contato\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"telefone3\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone3\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email3\">E-mail</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"email3\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"contato4\">Contato (4)</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"contato4\"\n              placeholder=\"Contato\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"telefone4\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone4\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email4\">E-mail</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"email4\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n      </form>\n    );\n  };\n\n  const getBody = () => {\n    return {\n      nome: getValue(\"nome\"),\n      CNPJ: getValue(\"CNPJ\"),\n      unidade: getValue(\"unidade\"),\n      endereco: getValue(\"endereco\"),\n      cidade: getValue(\"cidade\"),\n      UF: getValue(\"UF\"),\n      CEP: getValue(\"CEP\"),\n      contato1: getValue(\"contato1\"),\n      contato2: getValue(\"contato2\"),\n      contato3: getValue(\"contato3\"),\n      contato4: getValue(\"contato4\"),\n      telefone1: getValue(\"telefone1\"),\n      telefone2: getValue(\"telefone2\"),\n      telefone3: getValue(\"telefone3\"),\n      telefone4: getValue(\"telefone4\"),\n      email1: getValue(\"email1\"),\n      email2: getValue(\"email2\"),\n      email3: getValue(\"email3\"),\n      email4: getValue(\"email4\"),\n    };\n  };\n\n  const getValue = (id) => {\n    const { value } = document.getElementById(id);\n    return value.length > 0 ? value : null;\n  };\n\n  const loadDetail = (element, newValue) => {\n    const item = document.getElementById(element);\n\n    if (item) {\n      item.value = newValue;\n    }\n  };\n\n  const closePopup = () => {\n    setPopupNew(false);\n    setLoadingNew(false);\n    setNewSucessfull(false);\n    setNewFailure(false);\n\n    setPopupView(false);\n    setLoadingView(false);\n    setViewSucessfull(false);\n    setViewFailure(false);\n    setReadOnly(false);\n\n    setPopupEdit(false);\n    setLoadingEdit(false);\n    setEditSucessfull(false);\n    setEditFailure(false);\n\n    setPopupDelete(false);\n    setLoadingDelete(false);\n    setDeleteSucessfull(false);\n    setDeleteFailure(false);\n  };\n\n  return (\n    <>\n      <div className=\"Medicos-Title\">\n        <h1>Hospitais</h1>\n        {loading && <CircularProgress color=\"secondary\" />}\n        <p>\n          Novo Hospital{\" \"}\n          <PostAddIcon\n            className=\"Add-Button\"\n            onClick={() => setPopupNew(true)}\n          />\n        </p>\n      </div>\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome</th>\n            <th scope=\"col\">Unidade</th>\n            <th scope=\"col\">CNPJ</th>\n            <th scope=\"col\">Endereço</th>\n            <th scope=\"col\">Cidade</th>\n            <th scope=\"col\">E-mail</th>\n            <th scope=\"col\">Telefone</th>\n            <th scope=\"col\">Contato</th>\n            <th scope=\"col\">Função</th>\n          </tr>\n        </thead>\n        <tbody>\n          {hospitais.map((item) => (\n            <tr scope=\"row\">\n              <td>{item.id}</td>\n              <td>{item.nome}</td>\n              <td>{item.unidade}</td>\n              <td>{item.CNPJ}</td>\n              <td>{item.endereco}</td>\n              <td>{item.cidade}</td>\n              <td>{item.email1}</td>\n              <td>{item.telefone1}</td>\n              <td>{item.contato1}</td>\n              <td className=\"td-funcoes\">\n                <PageviewIcon onClick={() => handleView(item.id)} />\n                <EditIcon onClick={() => handleEdit(item.id)} />\n                <DeleteForeverIcon\n                  onClick={() => handleDelete(item.id, item.nome)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Dialog open={popupNew} fullWidth={true}>\n        <DialogTitle>Cadastrar Novo Hospital</DialogTitle>\n        <DialogContent>\n          {newSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Hospital cadastrado com sucesso!!!\n            </DialogContentText>\n          )}\n          {newFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar cadastrar hospital,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingNew && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {newSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => handleSave()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupView} fullWidth={true}>\n        <DialogTitle>Dados do Hospital</DialogTitle>\n        <DialogContent>\n          {viewFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao carregar os dados do hospital\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => closePopup()}>Sair</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupEdit} fullWidth={true}>\n        <DialogTitle>Editar Dados do Hospital</DialogTitle>\n        <DialogContent>\n          {editSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Hospital editado com sucesso!!!\n            </DialogContentText>\n          )}\n          {editFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar editar hosiptal, verifique\n              os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingEdit && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {editSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => editHospital()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupDelete} fullWidth={true}>\n        <DialogTitle>Deletar Hospital</DialogTitle>\n        <DialogContent>\n          {deleteSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Hospital deletado com sucesso!!!\n            </DialogContentText>\n          )}\n          {deleteFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar deletar hospital,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          Você realmente deseja deletar o hospital {hospitalName} ({hospitalId}\n          )?\n        </DialogContent>\n        <DialogActions>\n          {loadingDelete && <CircularProgress color=\"secondary\" />}\n          {deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => deleteHospital()}>Sim</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Não</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Hospitais;\n","import api from \"./api\";\n\nclass DataService {\n  findAll() {\n    return api.get(\"/cirurgias\");\n  }\n\n  findOne(id) {\n    return api.get(`/cirurgias/${id}`);\n  }\n\n  create(data) {\n    return api.post(\"/cirurgias\", data);\n  }\n\n  update(id, data) {\n    return api.put(`/cirurgias/${id}`, data);\n  }\n\n  delete(id) {\n    return api.delete(`/cirurgias/${id}`);\n  }\n}\n\nexport default new DataService();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Pageview as PageviewIcon,\n  Edit as EditIcon,\n  DeleteForever as DeleteForeverIcon,\n  WarningOutlined as WarningOutlinedIcon,\n  CheckOutlined as CheckOutlinedIcon,\n  PostAdd as PostAddIcon,\n} from \"@material-ui/icons\";\nimport {\n  CircularProgress,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport cirurgiasServices from \"../../services/cirurgias.service\";\n\nfunction Cirurgias() {\n  const [updateTable, setUpdateTable] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [cirurgias, setCirurgias] = useState([]);\n  const [cirurgiaDetail, setCirurgiaDetail] = useState({});\n  const [cirurgiaId, setCirurgiaId] = useState(0);\n  const [cirurgiaName, setCirurgiaName] = useState(\"\");\n  const [popupNew, setPopupNew] = useState(false);\n  const [loadingNew, setLoadingNew] = useState(false);\n  const [newSucessfull, setNewSucessfull] = useState(false);\n  const [newFailure, setNewFailure] = useState(false);\n  const [popupView, setPopupView] = useState(false);\n  const [loadingView, setLoadingView] = useState(false);\n  const [viewSucessfull, setViewSucessfull] = useState(false);\n  const [viewFailure, setViewFailure] = useState(false);\n  const [popupEdit, setPopupEdit] = useState(false);\n  const [loadingEdit, setLoadingEdit] = useState(false);\n  const [editSucessfull, setEditSucessfull] = useState(false);\n  const [editFailure, setEditFailure] = useState(false);\n  const [popupDelete, setPopupDelete] = useState(false);\n  const [loadingDelete, setLoadingDelete] = useState(false);\n  const [deleteSucessfull, setDeleteSucessfull] = useState(false);\n  const [deleteFailure, setDeleteFailure] = useState(false);\n\n  useEffect(async () => {\n    setLoading(true);\n\n    const response = await cirurgiasServices.findAll();\n\n    switch (response.status) {\n      case 200:\n        setCirurgias(response.data);\n        break;\n\n      default:\n        alert(\n          \"Não foi possível carregar os dados, tente novamente mais tarde!\"\n        );\n    }\n\n    setLoading(false);\n    setUpdateTable(false);\n  }, [updateTable]);\n\n  useEffect(() => {\n    if (cirurgiaDetail) {\n      for (const detail in cirurgiaDetail) {\n        loadDetail(detail, cirurgiaDetail[detail]);\n      }\n    }\n  }, [cirurgiaDetail]);\n\n  const createCirurgia = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingNew(true);\n\n      const response = await cirurgiasServices.create(body);\n\n      switch (response.status) {\n        case 201:\n          setNewSucessfull(true);\n          setUpdateTable(true);\n          break;\n\n        default:\n          setNewFailure(true);\n      }\n    } catch (e) {\n      setNewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingNew(false);\n    }\n  };\n\n  const handleView = async (id) => {\n    setPopupView(true);\n    setReadOnly(true);\n\n    try {\n      setLoadingView(true);\n\n      const response = await cirurgiasServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setCirurgiaDetail(response.data);\n          break;\n        default:\n          setViewFailure(true);\n          alert(\n            \"Falha ao buscar as informações da cirurgia, tente novamente mais tarde\"\n          );\n      }\n    } catch (e) {\n      setViewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingView(false);\n    }\n  };\n\n  const handleEdit = async (id) => {\n    setPopupEdit(true);\n    setCirurgiaId(id);\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await cirurgiasServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setCirurgiaDetail(response.data);\n          break;\n\n        default:\n          setEditFailure(true);\n          alert(\n            \"Falha ao buscar os informações da cirurgia, tente novamente mais tarde\"\n          );\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingEdit(false);\n    }\n  };\n\n  const editCirurgia = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await cirurgiasServices.update(cirurgiaId, body);\n\n      switch (response.status) {\n        case 202:\n          setEditSucessfull(true);\n          break;\n\n        default:\n          setEditFailure(true);\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setUpdateTable(true);\n      setLoadingEdit(false);\n    }\n  };\n\n  const handleDelete = (id, name) => {\n    setCirurgiaId(id);\n    setCirurgiaName(name);\n    setPopupDelete(true);\n  };\n\n  const deleteCirurgia = async () => {\n    try {\n      setLoadingDelete(true);\n\n      const response = await cirurgiasServices.delete(cirurgiaId);\n\n      switch (response.status) {\n        case 202:\n          setDeleteSucessfull(true);\n          break;\n\n        default:\n          setDeleteFailure(true);\n      }\n    } catch (e) {\n      e.response.data ? alert(e.response.data) : alert(e);\n      setDeleteFailure(true);\n    } finally {\n      setUpdateTable(true);\n      setLoadingDelete(false);\n    }\n  };\n\n  const form = () => {\n    return (\n      <form id=\"Form-Add-Paciente\">\n        <div class=\"form-group\">\n          <label for=\"nome\">Nome</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"nome\"\n            placeholder=\"Nome\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"CID\">CID</label>\n          <textarea\n            class=\"form-control\"\n            id=\"CID\"\n            placeholder=\"CID\"\n            rows=\"2\"\n            cols=\"50\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"TUSS\">TUSS</label>\n          <textarea\n            class=\"form-control\"\n            id=\"TUSS\"\n            placeholder=\"TUSS\"\n            rows=\"2\"\n            cols=\"50\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"justificativa\">Justificativa</label>\n          <textarea\n            class=\"form-control\"\n            id=\"justificativa\"\n            placeholder=\"Justificativa\"\n            rows=\"4\"\n            cols=\"50\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"materiais\">Materiais</label>\n          <textarea\n            class=\"form-control\"\n            id=\"materiais\"\n            placeholder=\"Materiais\"\n            rows=\"4\"\n            cols=\"50\"\n            readOnly={readOnly}\n          />\n        </div>\n      </form>\n    );\n  };\n\n  const closePopup = () => {\n    setPopupNew(false);\n    setLoadingNew(false);\n    setNewSucessfull(false);\n    setNewFailure(false);\n\n    setPopupView(false);\n    setLoadingView(false);\n    setViewSucessfull(false);\n    setViewFailure(false);\n    setReadOnly(false);\n\n    setPopupEdit(false);\n    setLoadingEdit(false);\n    setEditSucessfull(false);\n    setEditFailure(false);\n\n    setPopupDelete(false);\n    setLoadingDelete(false);\n    setDeleteSucessfull(false);\n    setDeleteFailure(false);\n  };\n\n  const getBody = () => {\n    return {\n      nome: getValue(\"nome\"),\n      CID: getValue(\"CID\"),\n      TUSS: getValue(\"TUSS\"),\n      justificativa: getValue(\"justificativa\"),\n      materiais: getValue(\"materiais\"),\n    };\n  };\n\n  const getValue = (id) => {\n    const { value } = document.getElementById(id);\n    return value.length > 0 ? value : null;\n  };\n\n  const loadDetail = (element, newValue) => {\n    const item = document.getElementById(element);\n\n    if (item) {\n      item.value = newValue;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"Medicos-Title\">\n        <h1>Cirurgias</h1>\n        {loading && <CircularProgress color=\"secondary\" />}\n        <p>\n          Nova Cirurgia{\" \"}\n          <PostAddIcon\n            className=\"Add-Button\"\n            onClick={() => setPopupNew(true)}\n          />\n        </p>\n      </div>\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome</th>\n            <th scope=\"col\">CID</th>\n            <th scope=\"col\">TUSS</th>\n            <th scope=\"col\">Justificativa</th>\n            <th scope=\"col\">Materiais</th>\n            <th scope=\"col\">Função</th>\n          </tr>\n        </thead>\n        <tbody>\n          {cirurgias.map((item) => (\n            <tr scope=\"row\">\n              <td>{item.id}</td>\n              <td>{item.nome}</td>\n              <td>{item.CID}</td>\n              <td>{item.TUSS}</td>\n              <td>{item.justificativa}</td>\n              <td>{item.materiais}</td>\n              <td className=\"td-funcoes\">\n                <PageviewIcon onClick={() => handleView(item.id)} />\n                <EditIcon onClick={() => handleEdit(item.id)} />\n                <DeleteForeverIcon\n                  onClick={() => handleDelete(item.id, item.nome)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Dialog open={popupNew} fullWidth={true}>\n        <DialogTitle>Cadastrar Nova Cirurgia</DialogTitle>\n        <DialogContent>\n          {newSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Cirurgia cadastrada com sucesso!!!\n            </DialogContentText>\n          )}\n          {newFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar cadastrar Cirurgia,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingNew && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {newSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => createCirurgia()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupView} fullWidth={true}>\n        <DialogTitle>Dados da Cirurgia</DialogTitle>\n        <DialogContent>\n          {viewFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao carregar os dados da cirurgia\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => closePopup()}>Sair</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupEdit} fullWidth={true}>\n        <DialogTitle>Editar Dados da Cirurgia</DialogTitle>\n        <DialogContent>\n          {editSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Cirurgia editada com sucesso!!!\n            </DialogContentText>\n          )}\n          {editFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar editar cirurgia, verifique\n              os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingEdit && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {editSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => editCirurgia()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupDelete} fullWidth={true}>\n        <DialogTitle>Deletar Cirurgia</DialogTitle>\n        <DialogContent>\n          {deleteSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Cirurgia deletada com sucesso!!!\n            </DialogContentText>\n          )}\n          {deleteFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar deletar cirurgia,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          Você realmente deseja deletar a cirurgia {cirurgiaName} ({cirurgiaId}\n          )?\n        </DialogContent>\n        <DialogActions>\n          {loadingDelete && <CircularProgress color=\"secondary\" />}\n          {deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => deleteCirurgia()}>Sim</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Não</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Cirurgias;\n","import api from \"./api\";\n\nclass DataService {\n  findAll() {\n    return api.get(\"/fornecedores\");\n  }\n\n  findOne(id) {\n    return api.get(`/fornecedores/${id}`);\n  }\n\n  create(data) {\n    return api.post(\"/fornecedores\", data);\n  }\n\n  update(id, data) {\n    return api.put(`/fornecedores/${id}`, data);\n  }\n\n  delete(id) {\n    return api.delete(`/fornecedores/${id}`);\n  }\n}\n\nexport default new DataService();\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Pageview as PageviewIcon,\n  Edit as EditIcon,\n  DeleteForever as DeleteForeverIcon,\n  WarningOutlined as WarningOutlinedIcon,\n  CheckOutlined as CheckOutlinedIcon,\n  PostAdd as PostAddIcon,\n} from \"@material-ui/icons\";\nimport {\n  CircularProgress,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport fornecedoresServices from \"../../services/fornecedores.service\";\n\nfunction Fornecedores() {\n  const [updateTable, setUpdateTable] = useState(false);\n  const [readOnly, setReadOnly] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [fornecedores, setFornecedores] = useState([]);\n  const [fornecedorDetail, setFornecedorDetail] = useState({});\n  const [fornecedorId, setFornecedorId] = useState(0);\n  const [fornecedorName, setFornecedorName] = useState(\"\");\n  const [popupNew, setPopupNew] = useState(false);\n  const [loadingNew, setLoadingNew] = useState(false);\n  const [newSucessfull, setNewSucessfull] = useState(false);\n  const [newFailure, setNewFailure] = useState(false);\n  const [popupView, setPopupView] = useState(false);\n  const [loadingView, setLoadingView] = useState(false);\n  const [viewSucessfull, setViewSucessfull] = useState(false);\n  const [viewFailure, setViewFailure] = useState(false);\n  const [popupEdit, setPopupEdit] = useState(false);\n  const [loadingEdit, setLoadingEdit] = useState(false);\n  const [editSucessfull, setEditSucessfull] = useState(false);\n  const [editFailure, setEditFailure] = useState(false);\n  const [popupDelete, setPopupDelete] = useState(false);\n  const [loadingDelete, setLoadingDelete] = useState(false);\n  const [deleteSucessfull, setDeleteSucessfull] = useState(false);\n  const [deleteFailure, setDeleteFailure] = useState(false);\n\n  useEffect(async () => {\n    setLoading(true);\n\n    const response = await fornecedoresServices.findAll();\n\n    switch (response.status) {\n      case 200:\n        setFornecedores(response.data);\n        break;\n\n      default:\n        alert(\n          \"Não foi possível carregar os dados, tente novamente mais tarde!\"\n        );\n    }\n\n    setLoading(false);\n    setUpdateTable(false);\n  }, [updateTable]);\n\n  useEffect(() => {\n    if (fornecedorDetail) {\n      for (const detail in fornecedorDetail) {\n        loadDetail(detail, fornecedorDetail[detail]);\n      }\n    }\n  }, [fornecedorDetail]);\n\n  const createFornecedor = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingNew(true);\n\n      const response = await fornecedoresServices.create(body);\n\n      switch (response.status) {\n        case 201:\n          setNewSucessfull(true);\n          setUpdateTable(true);\n          break;\n\n        default:\n          setNewFailure(true);\n      }\n    } catch (e) {\n      setNewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingNew(false);\n    }\n  };\n\n  const handleView = async (id) => {\n    setPopupView(true);\n    setReadOnly(true);\n\n    try {\n      setLoadingView(true);\n\n      const response = await fornecedoresServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setFornecedorDetail(response.data);\n          break;\n\n        default:\n          setViewFailure(true);\n          alert(\n            \"Falha ao buscar as informações do fornecedor, tente novamente\"\n          );\n      }\n    } catch (e) {\n      setViewFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingView(false);\n    }\n  };\n\n  const handleEdit = async (id) => {\n    setPopupEdit(true);\n    setFornecedorId(id);\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await fornecedoresServices.findOne(id);\n\n      switch (response.status) {\n        case 200:\n          setFornecedorDetail(response.data);\n          break;\n\n        default:\n          setEditFailure(true);\n          alert(\n            \"Falha ao buscar as informações do fornecedor, tente novamente mais tarde\"\n          );\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setLoadingEdit(false);\n    }\n  };\n\n  const editFornecedor = async () => {\n    const body = getBody();\n\n    try {\n      setLoadingEdit(true);\n\n      const response = await fornecedoresServices.update(fornecedorId, body);\n\n      switch (response.status) {\n        case 202:\n          setEditSucessfull(true);\n          break;\n\n        default:\n          setEditFailure(true);\n      }\n    } catch (e) {\n      setEditFailure(true);\n      e.response.data ? alert(e.response.data) : alert(e);\n    } finally {\n      setUpdateTable(true);\n      setLoadingEdit(false);\n    }\n  };\n\n  const handleDelete = (id, name) => {\n    setFornecedorId(id);\n    setFornecedorName(name);\n    setPopupDelete(true);\n  };\n\n  const deleteFornecedor = async () => {\n    try {\n      setLoadingDelete(true);\n\n      const response = await fornecedoresServices.delete(fornecedorId);\n\n      switch (response.status) {\n        case 202:\n          setDeleteSucessfull(true);\n          break;\n\n        default:\n          setDeleteFailure(true);\n      }\n    } catch (e) {\n      e.response.data ? alert(e.response.data) : alert(e);\n      setDeleteFailure(true);\n    } finally {\n      setUpdateTable(true);\n      setLoadingDelete(false);\n    }\n  };\n\n  const getBody = () => {\n    return {\n      nome: getValue(\"nome\"),\n      CNPJ: getValue(\"CNPJ\"),\n      endereco: getValue(\"endereco\"),\n      cidade: getValue(\"cidade\"),\n      UF: getValue(\"UF\"),\n      CEP: getValue(\"CEP\"),\n      telefone: getValue(\"telefone\"),\n      celular: getValue(\"celular\"),\n      email: getValue(\"email\"),\n      representante: getValue(\"representante\"),\n    };\n  };\n\n  const getValue = (id) => {\n    const { value } = document.getElementById(id);\n    return value.length > 0 ? value : null;\n  };\n\n  const loadDetail = (element, newValue) => {\n    const item = document.getElementById(element);\n\n    if (item) {\n      item.value = newValue;\n    }\n  };\n\n  const form = () => {\n    return (\n      <form id=\"Form-Add-Paciente\">\n        <div class=\"form-group\">\n          <label for=\"nome\">Nome</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"nome\"\n            placeholder=\"Nome\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"CNPJ\">CNPJ</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"CNPJ\"\n            placeholder=\"CNPJ\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"endereco\">Endereço</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"endereco\"\n            placeholder=\"Endereço\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"cidade\">Cidade</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"cidade\"\n              placeholder=\"Cidade\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"UF\">UF</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"UF\"\n              placeholder=\"Estado\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"CEP\">CEP</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"CEP\"\n              placeholder=\"CEP\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <label for=\"telefone\">Telefone</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"telefone\"\n              placeholder=\"Telefone\"\n              readOnly={readOnly}\n            />\n          </div>\n          <div class=\"col\">\n            <label for=\"celular\">Celular</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"celular\"\n              placeholder=\"Celular\"\n              readOnly={readOnly}\n            />\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"email\"\n            placeholder=\"e-mail\"\n            readOnly={readOnly}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"representante\">Representante</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"representante\"\n            placeholder=\"Representante\"\n            readOnly={readOnly}\n          />\n        </div>\n      </form>\n    );\n  };\n\n  const closePopup = () => {\n    setPopupNew(false);\n    setLoadingNew(false);\n    setNewSucessfull(false);\n    setNewFailure(false);\n\n    setPopupView(false);\n    setLoadingView(false);\n    setViewSucessfull(false);\n    setViewFailure(false);\n    setReadOnly(false);\n\n    setPopupEdit(false);\n    setLoadingEdit(false);\n    setEditSucessfull(false);\n    setEditFailure(false);\n\n    setPopupDelete(false);\n    setLoadingDelete(false);\n    setDeleteSucessfull(false);\n    setDeleteFailure(false);\n  };\n\n  return (\n    <>\n      <div className=\"Medicos-Title\">\n        <h1>Fornecedores</h1>\n        {loading && <CircularProgress color=\"secondary\" />}\n        <p>\n          Novo Fornecedor{\" \"}\n          <PostAddIcon\n            className=\"Add-Button\"\n            onClick={() => setPopupNew(true)}\n          />\n        </p>\n      </div>\n      <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Nome</th>\n            <th scope=\"col\">CNPJ</th>\n            <th scope=\"col\">Representante</th>\n            <th scope=\"col\">E-mail</th>\n            <th scope=\"col\">Telefone</th>\n            <th scope=\"col\">Celular</th>\n            <th scope=\"col\">Endereço</th>\n            <th scope=\"col\">Cidade</th>\n            <th scope=\"col\">Função</th>\n          </tr>\n        </thead>\n        <tbody>\n          {fornecedores.map((item) => (\n            <tr scope=\"row\">\n              <td>{item.id}</td>\n              <td>{item.nome}</td>\n              <td>{item.CNPJ}</td>\n              <td>{item.representante}</td>\n              <td>{item.email}</td>\n              <td>{item.telefone}</td>\n              <td>{item.celular}</td>\n              <td>{item.endereco}</td>\n              <td>{item.cidade}</td>\n              <td className=\"td-funcoes\">\n                <PageviewIcon onClick={() => handleView(item.id)} />\n                <EditIcon onClick={() => handleEdit(item.id)} />\n                <DeleteForeverIcon\n                  onClick={() => handleDelete(item.id, item.nome)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <Dialog open={popupNew} fullWidth={true}>\n        <DialogTitle>Cadastrar Novo Fornecedor</DialogTitle>\n        <DialogContent>\n          {newSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Fornecedor cadastrado com sucesso!!!\n            </DialogContentText>\n          )}\n          {newFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar cadastrar fornecedor,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingNew && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {newSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => createFornecedor()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupView} fullWidth={true}>\n        <DialogTitle>Dados do Fornecedor</DialogTitle>\n        <DialogContent>\n          {viewFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao carregar os dados do fornecedor\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => closePopup()}>Sair</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupEdit} fullWidth={true}>\n        <DialogTitle>Editar Dados do Fornecedor</DialogTitle>\n        <DialogContent>\n          {editSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Fornecedor editado com sucesso!!!\n            </DialogContentText>\n          )}\n          {editFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar editar fornecedor,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          {form()}\n        </DialogContent>\n        <DialogActions>\n          {loadingEdit && <CircularProgress color=\"secondary\" />}\n          <Button onClick={() => closePopup()}>Cancelar</Button>\n          {editSucessfull ? (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          ) : (\n            <Button onClick={() => editFornecedor()}>Salvar</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n      <Dialog open={popupDelete} fullWidth={true}>\n        <DialogTitle>Deletar Fornecedor</DialogTitle>\n        <DialogContent>\n          {deleteSucessfull && (\n            <DialogContentText>\n              <CheckOutlinedIcon /> Fornecedor deletado com sucesso!!!\n            </DialogContentText>\n          )}\n          {deleteFailure && (\n            <DialogContentText>\n              <WarningOutlinedIcon /> Falha ao tentar deletar fornecedor,\n              verifique os dados e tente novamente!!!\n            </DialogContentText>\n          )}\n          Você realmente deseja deletar o fornecedor {fornecedorName} (\n          {fornecedorId}\n          )?\n        </DialogContent>\n        <DialogActions>\n          {loadingDelete && <CircularProgress color=\"secondary\" />}\n          {deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Sair</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => deleteFornecedor()}>Sim</Button>\n          )}\n          {!deleteSucessfull && (\n            <Button onClick={() => closePopup()}>Não</Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default Fornecedores;\n","import \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport CopyRights from \"./Components/CopyRights\";\nimport Signin from \"./Components/Signin\";\nimport Navbar from \"./Components/Navbar\";\nimport Pacientes from \"./Components/Pacientes\";\nimport Medicos from \"./Components/Medicos\";\nimport Convenios from \"./Components/Convenios\";\nimport Hospitais from \"./Components/Hospitais\";\nimport Cirurgias from \"./Components/Cirurgias\";\nimport Fornecedores from \"./Components/Fornecedores\";\n\nfunction App() {\n  return (\n    <BrowserRouter className=\"App\">\n      <Navbar />\n\n      <Route path=\"/user/signin\">\n        <Signin />\n      </Route>\n\n      <Route path=\"/pacientes\">\n        <Pacientes />\n      </Route>\n\n      <Route path=\"/médicos\">\n        <Medicos />\n      </Route>\n\n      <Route path=\"/convênios\">\n        <Convenios />\n      </Route>\n\n      <Route path=\"/hospitais\">\n        <Hospitais />\n      </Route>\n\n      <Route path=\"/cirurgias\">\n        <Cirurgias />\n      </Route>\n\n      <Route path=\"/fornecedores\">\n        <Fornecedores />\n      </Route>\n\n      <CopyRights />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { UserProvider } from \"./providers/user\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}